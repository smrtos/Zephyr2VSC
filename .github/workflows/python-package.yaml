# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Zephyr2VSC

on:
  push:
    branches: [ refactor/make-module ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        sudo apt install python3-venv
        python3 -m venv venv
        . venv/bin/activate
        pip install .[dev]
    - name: Formatting
      run: |
        . venv/bin/activate
        black --check .
        isort --check-only .
    - name: Linting
      run: |
        . venv/bin/activate
        flake8 .
        mypy . --exclude *build*
    - name: Clone Zephyr submodule
      run: |
        git config --global url."https://github.com/".insteadOf "git@github.com:"
        git submodule init
        git submodule update
    - name: Install Zephyr
      run: |
        sudo apt install wget
        wget https://apt.kitware.com/kitware-archive.sh
        sudo bash kitware-archive.sh
        sudo apt install --no-install-recommends git cmake ninja-build gperf ccache dfu-util device-tree-compiler python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1
        . venv/bin/activate
        pip install west
        cd tests/fixtures
        cd zephyrproject
        west update
        west zephyr-export
        pip install -r zephyr/scripts/requirements.txt
    - name: Install Zephyr SDK
      run: |
        cd ~
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/zephyr-sdk-0.15.2_linux-x86_64.tar.gz
        wget -O - https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/sha256.sum | shasum --check --ignore-missing
        tar xf zephyr-sdk-0.15.2_linux-x86_64.tar.gz
        cd zephyr-sdk-0.15.2
        ./setup.sh -t all -h -c
    - name: Testing
      run: |
        . venv/bin/activate
        coverage erase
        coverage run -m pytest
        coverage report
